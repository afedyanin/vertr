syntax = "proto3";

import "Protos/vertr-exchange-common.proto";

// import "google/protobuf/duration.proto";  
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Vertr.Exchange.Protos";

package exchange;

service Exchange {
  rpc Nop (CommandNoParams) returns (CommandResult);
  rpc GetOrderBook(OrderBookRequest) returns (CommandResult);
  rpc AddSymbols(AddSymbolsRequest) returns (CommandResult);
  rpc AddUser(UserRequest) returns (CommandResult);
  rpc AddAccounts(AddAccountsRequest) returns (CommandResult);
  rpc AdjustBalance(AdjustBalanceRequest) returns (CommandResult);
  rpc CancelOrder(CancelOrderRequest) returns (CommandResult);
  rpc MoveOrder(MoveOrderRequest) returns (CommandResult);
  rpc PlaceOrder(PlaceOrderRequest) returns (CommandResult);
  rpc ReduceOrder(ReduceOrderRequest) returns (CommandResult);
  rpc Reset(CommandNoParams) returns (CommandResult);
  rpc ResumeUser(UserRequest) returns (CommandResult);
  rpc SuspendUser(UserRequest) returns (CommandResult);
  rpc GetSingleUserReport(UserRequest) returns (CommandResult);
}

message CommandNoParams {}

message OrderBookRequest {
    int32 Symbol = 1;
    int32 Size = 2;
}

message AddSymbolsRequest {
    repeated SymbolSpecification Symbols = 1;
}

message UserRequest {
    int64 UserId = 1;
}

message AddAccountsRequest {
    repeated UserAccount UserAccounts = 1;
}

message AdjustBalanceRequest {
    int64 UserId = 1;
    int32 Currency = 2;
    DecimalValue Amount = 3;
}

message CancelOrderRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
    int32 Symbol = 3;
}

message MoveOrderRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
    int32 Symbol = 3;
    DecimalValue NewPrice = 4;
}

message PlaceOrderRequest {
    int64 UserId = 1;
    int32 Symbol = 2;
    DecimalValue Price = 3;
    int64 Size = 4;
    OrderAction Action = 5;
    OrderType OrderType = 6;
}

message ReduceOrderRequest {
    int64 OrderId = 1;
    int64 UserId = 2;
    int32 Symbol = 3;
    int64 ReduceSize = 4;
}

message UserAccount {
    int64 UserId = 1;
    map<int32, DecimalValue> Balances = 2;  
}

message CommandResult {
  ResultCode CommandResultCode = 1;
  int64 OrderId = 2;
  google.protobuf.Timestamp Timestamp = 3;
  Level2MarketData MarketData = 4;
  repeated ExchangeEvent Events = 5;
}


message ExchangeEvent {
    EventType EventType = 1;
    bool ActiveOrderCompleted = 2;
    bool MatchedOrderCompleted = 3;
    int64 MatchedOrderId = 4;
    int64 MatchedOrderUid = 5;
    DecimalValue Price = 6;
    int64 Size = 7;
    bytes BinaryData = 8;
}

message Level2MarketData {
    int32 AskSize = 1;
    int32 BidSize = 2;
    repeated DecimalValue AskPrices = 3; // TODO: convert to decimal
    repeated int64 AskVolumes = 4;
    repeated int64 AskOrders = 5;
    repeated DecimalValue BidPrices = 6;
    repeated int64 BidVolumes = 7;
    repeated int64 BidOrders = 8;
    google.protobuf.Timestamp Timestamp = 9;
    int64 ReferenceSeq = 10;
}

message SymbolSpecification {
    int32 SymbolId = 1;
    SymbolType Type = 2;
    int32 Currency = 3;
}
